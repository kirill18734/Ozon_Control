from flask import Flask, request
from flask_cors import CORS
import win32print
import psutil
import time
import win32ui

PORT = 4025
PRINTER_NAME = "CHITENG-CT221B"

def free_port(port):
    """–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ—Ä—Ç."""
    for conn in psutil.net_connections(kind='inet'):
        if conn.laddr.port == port and conn.status == psutil.CONN_LISTEN:
            pid = conn.pid
            if pid:
                print(f"‚ö†Ô∏è –ü–æ—Ä—Ç {port} —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è. –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å PID {pid}...")
                try:
                    p = psutil.Process(pid)
                    p.terminate()
                    p.wait(timeout=3)
                    print("‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à—ë–Ω.")
                except Exception as e:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å: {e}")
            else:
                print(f"‚ùå –ü–æ—Ä—Ç {port} –∑–∞–Ω—è—Ç, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ PID.")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
free_port(PORT)

# –ù–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å, —á—Ç–æ–±—ã –ø–æ—Ä—Ç –æ—Å–≤–æ–±–æ–¥–∏–ª—Å—è
time.sleep(1)

app = Flask(__name__)
CORS(app)

def print_text(text):
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–∏–Ω—Ç–µ—Ä
    printer = win32print.OpenPrinter(PRINTER_NAME)
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–Ω—Ç–µ—Ä–µ
        printer_info = win32print.GetPrinter(printer, 2)
        # –°–æ–∑–¥–∞–µ–º DC (device context) –¥–ª—è –ø–µ—á–∞—Ç–∏
        hdc = win32ui.CreateDC()
        hdc.CreatePrinterDC(PRINTER_NAME)

        # –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
        hdc.StartDoc("–ü–µ—á–∞—Ç—å —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ Python")
        hdc.StartPage()

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à—Ä–∏—Ñ—Ç (–ø–æ –∂–µ–ª–∞–Ω–∏—é –º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å)
        font = win32ui.CreateFont({
            "name": "Consolas",
            "height": 20,
            "weight": 400,
        })
        hdc.SelectObject(font)

        # –ü–µ—á–∞—Ç–∞–µ–º —Ç–µ–∫—Å—Ç
        hdc.TextOut(100, 100, text)

        # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –¥–æ–∫—É–º–µ–Ω—Ç
        hdc.EndPage()
        hdc.EndDoc()
        hdc.DeleteDC()
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–Ω—Ç–µ—Ä
        win32print.ClosePrinter(printer)

@app.route('/print', methods=['POST'])
def print_from_data():
    try:
        data = request.get_json()
        print("üì• –ü—Ä–∏—à–ª–∏ –¥–∞–Ω–Ω—ã–µ:", data)
        text = data.get('text', '').strip()

        print("üìù –¢–µ–∫—Å—Ç –¥–ª—è –ø–µ—á–∞—Ç–∏:", text)

        if not text:
            return {'status': 'error', 'message': 'Empty text'}, 400
            ## —Ç—É—Ç –Ω—É–∂–Ω—ã–µ –ø—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤
        print(f'–û—Ç–ø—Ä–∞–≤–∏–ª –Ω–∞ —Ä–∞—Å–ø–µ—á–∞—Ç–∫—É: \'{str(text).split("-")[0]}.\' ')
        print_text(f"{str(text).split('-')[0]}.") # —Ä–∞–∑–±–∏–ª —Å—Ç—Ä–æ–∫—É –ø–æ –∑–Ω–∞–∫—É —Ç–∏—Ä–µ, –∏ –ø–æ–ª—É—á–∏—á–∏–ª —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –Ω–æ–º–µ—Ä–µ

        print(f"‚úÖ –ù–∞–ø–µ—á–∞—Ç–∞–Ω–æ: {text}")
        return {'status': 'success', 'message': f'Printed: {text}'}

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –≤–æ Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:", e)
        return {'status': 'error', 'message': str(e)}, 500

if __name__ == '__main__':
    app.run(port=PORT)
