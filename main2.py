# from PIL import Image, ImageOps
# import pytesseract
# import os
#
# from config import OUTPUT_IMAGE, Tesseract_FILE_PATH, Tesseract_DIR_PATH
#
#
# def preprocess_and_ocr(image_path, tesseract_cmd, tessdata_prefix, lang):
#     pytesseract.pytesseract.tesseract_cmd = tesseract_cmd
#     os.environ['TESSDATA_PREFIX'] = tessdata_prefix
#
#     img = Image.open(image_path)
#
#     # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –≥—Ä–∞–¥–∞—Ü–∏–∏ —Å–µ—Ä–æ–≥–æ
#     img = img.convert('L')
#
#     # –ò–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º (–µ—Å–ª–∏ —Ñ–æ–Ω —Å–≤–µ—Ç–ª—ã–π)
#     img = ImageOps.invert(img)
#
#     # –ü—Ä–∏–º–µ–Ω–∏–º –±–∏–Ω–∞—Ä–∏–∑–∞—Ü–∏—é
#     threshold = 128
#     img = img.point(lambda x: 0 if x < threshold else 255, '1')
#
#     # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —Å–æ—Ö—Ä–∞–Ω–∏–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
#     img.save("processed.png")
#
#     text = pytesseract.image_to_string(img)
#     print(text)
#     print(f"–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {text.strip()}")
#     return text.strip()
#
# print(preprocess_and_ocr(OUTPUT_IMAGE,Tesseract_FILE_PATH, Tesseract_DIR_PATH, 'eng'))
from PIL import Image, ImageOps
import pytesseract
import os

from config import OUTPUT_IMAGE, Tesseract_FILE_PATH, Tesseract_DIR_PATH

def preprocess_and_ocr(image_path, tesseract_cmd, tessdata_prefix, lang):
    pytesseract.pytesseract.tesseract_cmd = tesseract_cmd
    os.environ['TESSDATA_PREFIX'] = tessdata_prefix

    img = Image.open(image_path)

    # üëâ –ü—Ä–æ–≤–µ—Ä–∏–º –∏ –≤—ã–≤–µ–¥–µ–º DPI –∏ —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    dpi = img.info.get('dpi', (72, 72))  # –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ ‚Äî –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 72 dpi
    print(f"[INFO] DPI –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {dpi}")
    print(f"[INFO] –†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–∏–∫—Å–µ–ª—è—Ö: {img.size}")  # (width, height)

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –≥—Ä–∞–¥–∞—Ü–∏–∏ —Å–µ—Ä–æ–≥–æ
    img = img.convert('L')

    # –ò–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º (–µ—Å–ª–∏ —Ñ–æ–Ω —Å–≤–µ—Ç–ª—ã–π)
    img = ImageOps.invert(img)

    # –ü—Ä–∏–º–µ–Ω–∏–º –±–∏–Ω–∞—Ä–∏–∑–∞—Ü–∏—é
    threshold = 128
    img = img.point(lambda x: 0 if x < threshold else 255, '1')

    # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —Å–æ—Ö—Ä–∞–Ω–∏–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    img.save("processed.png")

    text = pytesseract.image_to_string(img)
    print(f"[INFO] –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {text.strip()}")
    return text.strip()

print(preprocess_and_ocr(OUTPUT_IMAGE, Tesseract_FILE_PATH, Tesseract_DIR_PATH, 'eng'))
