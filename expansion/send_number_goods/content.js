const previousCodes = new Set();
const href_reciepts_goods = "https://turbo-pvz.ozon.ru/receiving/receive";
const local_url_send_to_server = "http://127.0.0.1:4025/print";
const timeout_sec = 1000;

let currentHref = location.href;
let observer = null;

function isValidCode(code) {
    return /^\d{1,}-\d+$/.test(code);
}

function sendToServer(text) {
    fetch(local_url_send_to_server, {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify({ text })
    })
    .then(res => res.json())
    .then(data => console.log("üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", data))
    .catch(err => console.error("‚ùå –û—à–∏–±–∫–∞:", err));
}

function scanAndCompare() {
    const items = document.querySelectorAll('[data-testid="logItemPlace"]');
    const currentCodes = new Set();

    for (const item of items) {
        const code = item.textContent.trim();
        if (!isValidCode(code)) {
            console.warn("‚õî –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç:", code);
            continue;
        }

        currentCodes.add(code);

        if (!previousCodes.has(code)) {
            previousCodes.add(code);
            console.log("üì¶ –ù–æ–≤—ã–π –Ω–æ–º–µ—Ä:", code);
            sendToServer(code);
        }
    }
}

function observeIfOnCorrectPage() {
    if (location.href === href_reciepts_goods) {
        console.log(`‚úÖ –ü–µ—Ä–µ—à–ª–∏ –Ω–∞ –Ω—É–∂–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: ${href_reciepts_goods}`);

        const targetNode = document.querySelector('._logsWrapper_1igxv_7');

        if (targetNode) {
            if (observer) observer.disconnect(); // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å, –µ—Å–ª–∏ –±—ã–ª
            observer = new MutationObserver(scanAndCompare);
            observer.observe(targetNode, {
                childList: true,
                subtree: true
            });
            console.log(`üîç –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ DOM –Ω–∞—á–∞—Ç–æ`);
            scanAndCompare();
        } else {
            console.warn(`‚ùå –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        }
    } else {
        if (observer) {
            observer.disconnect();
            observer = null;
            console.log("üõë –í—ã—à–ª–∏ —Å –Ω—É–∂–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");
        }
    }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–º–µ–Ω—É URL
setInterval(() => {
    if (location.href !== currentHref) {
        currentHref = location.href;
        previousCodes.clear(); // –æ—á–∏—â–∞–µ–º –ø—Ä–æ—à–ª—ã–µ –∫–æ–¥—ã –ø—Ä–∏ —Å–º–µ–Ω–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        console.log("üîÑ URL –∏–∑–º–µ–Ω–∏–ª—Å—è:", currentHref);
        observeIfOnCorrectPage();
    }
}, timeout_sec); // –ü—Ä–æ–≤–µ—Ä–∫–∞ URL —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É ‚Äî —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –±–µ–∑ –ª–∏—à–Ω–µ–π –ª–æ–≥–∏–∫–∏

// –ü–µ—Ä–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
observeIfOnCorrectPage();
